{
    "collab_server" : "",
    "contents" : "--\ntitle: \"Week 7: Geostatistics III: Spatiotemoral Kriging\"\noutput: github_document\n---\n```{r global_options, echo=FALSE, results='asis'}\nknitr::opts_chunk$set(fig.width=12, fig.height=8, fig.path='Figs/',  warning=FALSE, message=FALSE)\nrm(list=ls())\n```\n\n```{r spacetime, echo=T, eval=R}\nlibrary(sp)\nlibrary(spacetime)\nlibrary(gstat)\nlibrary(rgdal)\n\n# load data from package gstat\ndata(DE_RB_2005, package = \"gstat\")\n# load('air.img')\n# DE_RB_2005 data was not included in the older packages of gstat\nair2005=DE_RB_2005\n\nset.seed(123)\nsmplDays <- sort(sample(365,8))\n\n# load German boundaries\ndata(air)\nDE_NUTS1 <- spTransform(DE_NUTS1, CRS(\"+init=epsg:32632\"))\n\nplot(DE_NUTS1)\npoints(air2005[,1], col='red')\n\n# station wise coverage\nbarplot(sort(table(air2005@index[,1])),  main=\"reported days per station\", ylab=\"number of days\", xaxt=\"n\")\n\n# acf\nacf(air2005[sample(68,1),,drop=F]@data)\nvar(air2005@data$PM10)\n\n# a few daily snapshots\nair=as(air2005[,smplDays],\"STFDF\")\nstplot(air, col.regions=bpy.colors(120)[-(1:20)], sp.layout = list(\"sp.polygons\", DE_NUTS1), scales=list(draw=F), key.space=\"right\", colorkey=T, cuts=0:70, main=NULL)\n\n# number of stations\nlength(air2005@sp)\n\n# calculate the empirical variogram\n\nempVgm <- variogramST(PM10~1, air2005, tlags=0:6)\n\nplot(empVgm, wireframe=T, scales=list(arrows=F))\nplot(empVgm)\n\n# fit of theoretical purely spatial models #\n############################################\nspEmpVgm <- empVgm[empVgm$timelag == 0,]\nclass(spEmpVgm) <- c(\"gstatVariogram\", \"data.frame\")\nspEmpVgm <- spEmpVgm[-1,1:3]\nspEmpVgm$dir.hor <- 0\nspEmpVgm$dir.ver <- 0\nspVgmMod <- fit.variogram(spEmpVgm, vgm(80,\"Exp\",300000,20))\nplot(spEmpVgm, spVgmMod)\n\n# fit of theoretical spatio-temporal models #\n#############################################\n\nlinStAni <- estiStAni(empVgm, c(50000,200000))\n\nplot(gamma~dist, empVgm[empVgm$timelag == 0,], ylim=c(0,100), xlim=c(0,800000))\npoints(empVgm[empVgm$spacelag == 0,]$timelag*linStAni, empVgm[empVgm$spacelag == 0,]$gamma, col=\"red\")\n\n##\n# rescale empVgm and linStAni to km for estimation\nempVgm$dist  <- empVgm$dist/1000\nempVgm$avgDist  <- empVgm$avgDist/1000\nempVgm$spacelag <- empVgm$spacelag/1000\n\nlinStAni <- linStAni/1000\n\n# separable\nseparableModel <- vgmST(\"separable\", space=vgm(0.9,\"Exp\", 200, 0.1), time =vgm(0.9,\"Sph\", 3.5, 0.1), sill=120)\n\nfitSepModel <- fit.StVariogram(empVgm, separableModel, fit.method = 7, stAni = linStAni, method = \"L-BFGS-B\", control = list(parscale=c(100,1,10,1,100)), lower = c(10,0,.1,0,0.1), upper = c(2000,1,12,1,200))\n\nattr(fitSepModel, \"optim.output\")$value\n# Exp+Exp: 9.87, Exp+Sph: 6.82, Sph+Exp: 10.42, Sph+Sph: 7.50\nplot(empVgm, fitSepModel, wireframe=T, all=T, scales=list(arrows=F), zlim=c(0,135))\n\n# metric\nmetricModel <- vgmST(\"metric\", joint = vgm(60, \"Mat\", 150, 10, kappa=0.6), stAni = 60)\n\nfitMetricModel <- fit.StVariogram(empVgm, metricModel, fit.method = 7,\n                                  stAni = linStAni, method = \"L-BFGS-B\",\n                                  control = list(parscale = c(10,20,5,10)),\n                                  lower = c(80,50,5,50),\n                                  upper = c(200,1500,60,300))\n\nattr(fitMetricModel, \"optim.output\")$value \n# Exp: 10.25, Sph: 10.59,\n# Gau: 21.32, Mat 5: 18.20, Mat 2: 14.43, Mat 1.25: 12.04,\n# Mat 1: 11.07, Mat 0.75: 10.23, Mat 0.6: 10.05\n\nplot(empVgm, fitMetricModel, wireframe=T, all=T, scales=list(arrows=F), zlim=c(0,135))\n```\n\n# Spatiotemporal kriging estimation\n\n```{r spacetime, echo=T, eval=T}\n\n# First build a grid over Germany\ngridDE <- SpatialGrid(GridTopology(air2005@sp@bbox[,1]%/%10000*10000, c(10000,10000), cells.dim=ceiling(apply(air2005@sp@bbox,1,diff)/20000)))\n\nproj4string(gridDE) <- CRS(\"+init=epsg:32632\")\nfullgrid(gridDE) <- F\n\n# only focus on within Germany\nind <- over(gridDE, as(DE_NUTS1,\"SpatialPolygons\"))\ngridDE <- gridDE[!is.na(ind)]\n\n# back scale vgms:\nfitSepModel$space$range <- fitSepModel$space$range*1000\n\nfitMetricModel$joint$range <- fitMetricModel$joint$range*1000\nfitMetricModel$stAni <- fitMetricModel$stAni*1000\n\n\nDE_pred <- STF(gridDE, air2005@time[smplDays])\ntIDS <- unique(pmax(1,pmin(as.numeric(outer(-5:5, smplDays, \"+\")), 365)))\n\nsepPred <- krigeST(PM10~1, data=air2005[,tIDS], \n                   newdata=DE_pred, fitSepModel, nmax=50,\n                   stAni=fitMetricModel$stAni/24/3600)\nmetPred <- krigeST(PM10~1, data=air2005[,tIDS], \n                   newdata=DE_pred, fitMetricModel, nmax=50,\n                   stAni=fitMetricModel$stAni/24/3600)\n# pure spatial prediction\npureSpPred <- matrix(NA, nrow=length(gridDE), length(smplDays))\ncol <- 1\nfor(i in smplDays) { # i <- 1\n  pureSpPred[,col] <- krige(PM10~1, as(air2005, \"STSDF\")[,i],\n                            gridDE, model=spVgmMod, nmax=50)$var1.pred\n  col <- col+1\n}\n\npureSpPred <- STFDF(gridDE, air2005@time[smplDays], data.frame(var1.pred = as.numeric(pureSpPred)))\n\nair2005 <- as(air2005, \"STFDF\")\n\nstpl <- stplot(sepPred, col.regions=bpy.colors(120)[-(1:20)], scales=list(draw=F),\n                 main=NULL, at=0:70, # \"spatio-temporal sum-metric model\"\n                 sp.layout = list(list(\"sp.polygons\", DE_NUTS1, first=FALSE, col=gray(0.5)),\n                                  list(\"sp.points\", air2005@sp, col=gray(0.25), pch=3, cex=.5)))\n  \nprint(stpl)\n\npureSpPlot <- stplot(pureSpPred, col.regions=bpy.colors(120)[-(1:20)], scales=list(draw=F),\n                 main=NULL, at=0:70, # \"spatio-temporal sum-metric model\"\n                 sp.layout = list(list(\"sp.polygons\", DE_NUTS1, first=FALSE, col=gray(0.5)),\n                                  list(\"sp.points\", air2005@sp, col=gray(0.25), pch=3, cex=.5)))\n\nprint(pureSpPlot)\n\n#  stplot(pureSpPred, col.regions=bpy.colors, scales=list(draw=F),\n#         main=\"pure spatial daily prediction\")\n#  stplot(sepPred, col.regions=bpy.colors(), scales=list(draw=F),\n#         main=\"spatio-temporal separable model\")\n\n```\n\n",
    "created" : 1507674919457.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "944027500",
    "id" : "F2854601",
    "lastKnownWriteTime" : 1507667577,
    "last_content_update" : 1507667577,
    "path" : "~/Git/hub/geog5330-fall2017/week7/kriging3-stKriging.Rmd",
    "project_path" : "kriging3-stKriging.Rmd",
    "properties" : {
        "marks" : "<:14,-1\n>:14,0"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}