knitr::opts_chunk$set(fig.width=12, fig.height=8, fig.path='Figs/', warning=FALSE, message=FALSE)
rm(list=ls())
library(sp)
library(gstat)
library(RColorBrewer)
data(meuse)
coordinates(meuse)=~x+y
#proj4string(meuse) = CRS('+init=epsg:28992')
plotGoogleMaps(meuse)
library(plotGoogleMaps)
data(meuse)
coordinates(meuse)=~x+y
#proj4string(meuse) = CRS('+init=epsg:28992')
plotGoogleMaps(meuse)
proj4string(meuse) = CRS('+init=epsg:28992')
plotGoogleMaps(meuse)
plotGoogleMaps(meuse, filename = 'meuse.html')
hist(meuse$zinc,breaks=20)
bubble(meuse, 'zinc', col=brewer.pal(2, 'Reds'), main= 'zinc concentrations (ppm)')
plot(log(zinc)~sqrt(dist), meuse)
abline(lm(log(zinc)~sqrt(dist), meuse))
zinc.idw = idw(zinc~1, meuse, meuse.grid)
zinc.idw = idw(zinc~1, meuse, meuse.grid)
data("meuse.grid")
zinc.idw = idw(zinc~1, meuse, meuse.grid)
class(meuse)
zinc.idw = idw(zinc~1, meuse, meuse.grid)
bbox(meuse.grid)
meuse.grid
class(meuse.grid)
data("meuse.grid")
class(meuse.grid)
gridded(meuse.grid)=TRUE
class(meuse.grid)
coordinates(meuse.grid)=~x+y
gridded(meuse.grid)=TRUE
zinc.idw = idw(zinc~1, meuse, meuse.grid)
proj4string(meuse.grid)=proj4string(meuse)
proj4string(meuse.grid)=proj4string(meuse)
zinc.idw = idw(zinc~1, meuse, meuse.grid)
str(zinc.idw)
spplot(zinc.idw[,1], main='zinc, inverse distance weighted estimation')
data(meuse.grid)
names(meuse)
coordinates(meuse.grid)=~x+y
gridded(meuse.grid)=TRUE
proj4string(meuse.grid)=proj4string(meuse)
plot(meuse.grid['dist'], col=rev(brewer.pal(9, 'Reds')), main='distance to river (m)')
lzn.vgm = variogram(log(meuse$zinc)~1, meuse)
lzn.vgm
plot(lzn.vgm)
lzn.vgm.map = variogram(log(zinc)~1, meuse, map=TRUE, cutoff=1500, width=100)
plot(lzn.vgm.map)
lzn.fit = fit.variogram(lzn.vgm, model = vgm(1, "Exp", 900, 1))
lzn.fit
plot(lzn.vgm, lzn.fit)
lznr.vgm = variogram(log(zinc)~sqrt(dist), meuse)
lznr.fit = fit.variogram(lznr.vgm, model = vgm(1, "Exp", 300, 1))
lznr.fit
plot(lznr.vgm, lznr.fit)
lzn.dir = variogram(log(zinc)~1, meuse, alpha = c(0, 45, 90, 135))
lzndir.fit = vgm(.59, "Sph", 1200, .05, anis = c(45, .4))
plot(lzn.dir, lzndir.fit, as.table = TRUE)
lznr.dir = variogram(log(zinc)~sqrt(dist), meuse, alpha = c(0, 45, 90, 135))
plot(lznr.dir, lznr.fit, as.table = TRUE)
lzn.kriged = krige(log(zinc)~1, meuse, meuse.grid, model = lzn.fit)
names(lzn.kriged)
plot(lzn.kriged[,1], main='zinc, simple kriging estimation')
plot(lzn.kriged[,2], main='zinc, variance of simple kriging estimation')
lznr.kriged = krige(log(zinc)~sqrt(dist), meuse, meuse.grid, model = lzn.fit)
plot(lznr.kriged[,1], main='zinc, universal kriging estimation')
plot(lznr.kriged[,2], main='zinc, variance of universal kriging estimation')
difference <- log(validation$zinc) - lzn.kriged.training$var1.pred
summary(difference)
rmse <- sqrt(sum(difference^2))
difference <- log(validation$zinc) - lzn.kriged.training$var1.pred
lzn.vgm.training = variogram(log(zinc)~1, training)
choose100 <- sample(1:155, 100)
training <- meuse[choose100, ]
validation <- meuse[-choose100, ]
lzn.vgm.training = variogram(log(zinc)~1, training)
lzn.fit.training = fit.variogram(lzn.vgm.training, model = vgm(1, "Sph", 900, 1))
lzn.kriged.training = krige(log(zinc)~1, data=training, newdata=validation, model = lzn.fit.training)
validation
lzn.kriged.training = krige(log(zinc)~1, data=training, newdata=validation, model = lzn.fit.training)
class(training)
class(validation)
names(training)
lzn.kriged.training = krige(log(zinc)~1, data=training, newdata=validation, model = lzn.fit.training)
lzn.kriged.training = krige(formula=log(zinc)~1, data=training, newdata=validation, model = lzn.fit.training)
lzn.fit.training = fit.variogram(lzn.vgm.training, model = vgm(1, "Sph", 900, 1))
plot(lzn.fit.training)
plot(lzn.vgm.training)
lzn.fit.training = fit.variogram(lzn.vgm.training, model = vgm(1, "Sph", 900, 1))
plot(lzn.vgm.training,lzn.fit.training)
lzn.kriged.training = krige(log(zinc)~1, data=training, newdata=validation, model = lzn.fit.training)
training$zinc
log(training$zinc)
validation
lzn.kriged.training = krige(log(zinc)~1, data=training, newdata=validation, model = lzn.fit.training)
lzn.kriged = krige(log(zinc)~1, meuse, meuse.grid, model = lzn.fit)
lzn.kriged = krige(log(zinc)~1, meuse, meuse, model = lzn.fit)
lzn.kriged.training = krige(log(zinc)~1, training, validation, model = lzn.fit.training)
difference <- log(validation$zinc) - lzn.kriged.training$var1.pred
summary(difference)
rmse <- sqrt(sum(difference^2))
rmse
plot(log(validation$zinc), lzn.kriged.training$var1.pred, xlab= 'observed values', ylab='predicted values')
cv<-krige.cv(log(zinc)~1,meuse, model=lzn.fit,nfold=nrow(meuse))
names(cv)
rmse2 <- sqrt(sum(cv$residual^2))
rmse2
qqplot
?qqplot
plot(log(validation$zinc), lzn.kriged.training$var1.pred, xlab= 'observed values', ylab='predicted values')
abline(lm(log(validation$zinc)~lzn.kriged.training$var1.pred))
plot(log(validation$zinc), lzn.kriged.training$var1.pred, xlab= 'observed values', ylab='predicted values')
abline(lm(log(validation$zinc)~lzn.kriged.training$var1.pred))
plot(log(validation$zinc), lzn.kriged.training$var1.pred, xlab= 'observed values', ylab='predicted values')
abline(lm(log(validation$zinc)~lzn.kriged.training$var1.pred))
qqplot(log(validation$zinc), lzn.kriged.training$var1.pred)
rmse2
rmse
# Generate a set of unconditional simulation based on the specified variogram
xy <- expand.grid(1:100, 1:100)
names(xy) <- c('x','y')
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025, range=5, model='Gau', nugget=10.0001), nmax=21)
yy <- predict(g.dummy, newdata=xy, nsim=4)
coordinates(yy)=~x+y
gridded(yy) =TRUE
spplot(yy)
# Generate a set of unconditional simulation based on the specified variogram
xy <- expand.grid(1:100, 1:100)
names(xy) <- c('x','y')
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025, range=50, model='Gau', nugget=10.0001), nmax=21)
yy <- predict(g.dummy, newdata=xy, nsim=4)
coordinates(yy)=~x+y
gridded(yy) =TRUE
spplot(yy)
plot(lzn.kriged[,1], main='zinc, simple kriging estimation')
lzn.kriged = krige(log(zinc)~1, meuse, meuse.grid, model = lzn.fit)
names(lzn.kriged)
plot(lzn.kriged[,1], main='zinc, simple kriging estimation')
plot(lzn.kriged[,2], main='zinc, variance of simple kriging estimation')
lznr.kriged = krige(log(zinc)~sqrt(dist), meuse, meuse.grid, model = lzn.fit)
xy <- expand.grid(1:100, 1:100)
names(xy) <- c('x','y')
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025, range=50, model='Gau', nugget=10.0001), nmax=21)
yy <- predict(g.dummy, newdata=xy, nsim=4)
coordinates(yy)=~x+y
gridded(yy) =TRUE
spplot(yy)
# Generate a set of unconditional simulation based on the specified variogram
xy <- expand.grid(1:100, 1:100)
names(xy) <- c('x','y')
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025, range=50, model='Gau', nugget=0.0001), nmax=21)
yy <- predict(g.dummy, newdata=xy, nsim=4)
coordinates(yy)=~x+y
gridded(yy) =TRUE
spplot(yy)
# Generate a set of unconditional simulation based on the specified variogram
xy <- expand.grid(1:100, 1:100)
names(xy) <- c('x','y')
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025, range=10, model='Gau', nugget=0.0001), nmax=21)
yy <- predict(g.dummy, newdata=xy, nsim=4)
coordinates(yy)=~x+y
gridded(yy) =TRUE
spplot(yy)
?expand.grid
